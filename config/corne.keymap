/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h> /* led id */
#include <dt-bindings/zmk/outputs.h> /* to be able to select usb or bluetooth */

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <27>; /* arbitrary; change at will */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
      color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};


/*
 * Above Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */




/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |FN/TAB|  Q  |  W  |  E  |  R  |   T    |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |   G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |   B    |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//              |LALKST/GUI | LWR | SFT-SPC|   | ENT |  RSE | DEL/ALT |
                        bindings = <
   &lt 4 TAB    &kp Q  &kp W  &kp E     &kp R  &kp T              &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
   &kp LCTRL    &kp A  &kp S  &kp D     &kp F  &kp G              &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
   &mt LSHFT N5 &kp Z  &kp X  &kp C     &kp V  &kp B              &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt ESC MINUS
                      &mt LALT LGUI  &mo 1  &mt LSHIFT SPACE   &kp RET  &mo 2  &mt RALT DEL
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// |      | BT1 | BT2 | BT3 | BT4 |USBTt|   |     |     |     |     |     |      |
//                    | GUI |     |     |   |     |     | ALT |
                        bindings = <
   &trans     &kp N1       &kp N2       &kp N3        &kp N4       &kp N5         &kp N6     &kp N7     &kp N8     &kp N9     &kp N0      &kp BSPC
   &trans     &kp N6       &kp N7       &kp N8        &kp N9       &kp N0         &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &trans      &trans
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3 &out OUT_TOG   &trans     &trans     &trans     &trans     &trans      &trans 
                                        &trans        &trans       &trans         &trans     &mo 3      &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |   !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// |      |      |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |      |      |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   |     |     | ALT |
                        bindings = <
   &trans     &kp EXCL          &kp AT  &kp HASH   &kp DLLR  &kp PRCNT   &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp DEL
   &trans     &trans            &trans  &kp PSCRN  &kp HOME  &kp PG_UP   &kp MINUS  &kp EQUAL &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
   &trans     &kp NON_US_BSLH   &trans  &trans     &kp END   &kp PG_DN   &kp UNDER  &kp PLUS  &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                    	           &trans    &mo 3     &trans      &trans     &trans    &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |  BT1 | BT2 | BT3 | BT4 |USBTt|   |  -  |  7  |  8  |  9  |  +  |     |
// |      |  RGB+|RGBsi| Hue |     |     |   |  *  |  4  |  5  |  6  | ,/. |     |
// |      |  RGB-|RGBsd| Blue|White|Green|   |  /  |  1  |  2  |  3  |  0  |  =  |
//                    | GUI |     | SPC |   |     |     |     |
                        bindings = <
   &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &out OUT_TOG              &kp KP_MINUS     &kp KP_N7  &kp KP_N8   &kp KP_N9  &kp KP_PLUS          &kp KP_NUM
   &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &kp C_VOL_DN  &kp C_VOL_UP              &kp KP_ASTERISK  &kp KP_N4  &kp KP_N5   &kp KP_N6  &mt KP_COMMA KP_DOT  &trans
   &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans           &trans        &trans                    &kp KP_SLASH     &kp KP_N1  &kp KP_N2   &kp KP_N3  &kp KP_N0            &kp KP_EQUAL
                                     &trans           &trans           &trans                                  &trans           &trans     &trans
                        >;
                };

                fn_layer {
// -----------------------------------------------------------------------------------------
// |      | F1  | F2  | F3  | F4  | F5  |   |  -  |  7  |  8  |  9  |  +  |     |
// |      | F6  | F7  | F8  | F9  | F10 |   |  *  |  4  |  5  |  6  | ,/. |     |
// |      | F11 | F12 |     |     |     |   |  /  |  1  |  2  |  3  |  0  |  =  |
//                    |     |     | SPC |   |     |     |     |
                        bindings = <
   &trans           &kp F1           &kp F2           &kp F3           &kp F4        &kp F5                    &kp KP_MINUS     &kp KP_N7  &kp KP_N8   &kp KP_N9  &kp KP_PLUS          &kp KP_NUM
   &trans           &kp F6           &kp F7           &kp F8           &kp F9        &kp F10                   &kp KP_ASTERISK  &kp KP_N4  &kp KP_N5   &kp KP_N6  &mt KP_COMMA KP_DOT  &trans
   &trans            &kp F11          &kp F12          &trans           &trans        &trans                   &kp KP_SLASH     &kp KP_N1  &kp KP_N2   &kp KP_N3  &kp KP_N0            &kp KP_EQUAL
                                     &trans           &trans           &trans                                  &trans           &trans     &trans
                        >;
                };
        };
};
