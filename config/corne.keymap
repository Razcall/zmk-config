/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h> /* led id */
#include <dt-bindings/zmk/outputs.h> /* to be able to select usb or bluetooth */

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <27>; /* arbitrary; change at will */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
      color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};


/*
 * Above Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |   T    |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |   G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |   B    |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SFT-SPC|   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &mt LSHIFT SPACE   &kp RET &mo 2 &mt RALT DEL
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | F1/1| F2/2| F3/3| F4/4| F5/5|   | F6/6| F7/7| F8/8| F9/9|F10/0| BKSP |
// | CTRL |     |     |     |     |     |   | LFT | DWN |  UP | RGT | F11 | F12  |
// | SHFT | BT1 | BT2 | BT3 | BT4 |USBTt|   |     |     |     |     |     |      |
//                    | GUI |     |     |   |     |     | ALT |
                        bindings = <
   &kp TAB    &mt F1 N1    &mt F2 N2    &mt F3 N3     &mt F4 N4    &mt F5 N5      &mt F6 N6  &mt F7 N7  &mt F8 N8  &mt F9 N9  &mt F10 N0  &kp BSPC
   &kp LCTRL  &mt F6 N6    &mt F7 N7    &mt F8 N8     &mt F9 N9    &mt F10 N0     &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp F11     &kp F12
   &kp LSHFT  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3 &out OUT_TOG   &trans     &trans     &trans     &trans     &trans      &trans 
                                        &kp LGUI      &trans       &trans         &trans     &mo 3      &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   |     |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK  &kp LPAR &kp RPAR &kp DEL
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT   &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC   &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI    &mo 3    &trans      &trans  &trans    &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 |USBTt|   |VOLUP|VOLUP|     |     |     |     |
// | RGBto| RGB+|RGBsi| Hue |     |     |   |VOLDW|VOLDW|     |     |     |     |
// | RGBef| RGB-|RGBsd| Blue|White|Green|   |     |     |     |     |     |     |
//                    | GUI |     | SPC |   |     |     |     |
                        bindings = <
   &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2                     &bt BT_SEL 3                    &out OUT_TOG                       &kp C_VOL_UP    &kp K_VOL_UP      &trans   &trans  &trans  &trans
   &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans                           &trans                          &trans                             &kp C_VOL_DOWN  &kp K_VOL_DOWN    &trans   &trans  &trans  &trans
   &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_COLOR_HSB(206,20,94) &rgb_ug RGB_COLOR_HSB(65,0,100) &rgb_ug RGB_COLOR_HSB(65,100,100)  &trans          &trans            &trans   &trans  &trans  &trans
                                     &trans           &trans                           &trans                                                             &trans          &trans            &trans
                        >;
                };
        };
};
